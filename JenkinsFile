pipeline {
    
    agent any
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {

        stage('Checkout') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'GitHub-AuthToken', variable: 'GITHUB_TOKEN')]) {
                        git url: 'https://github.com/Vinayvasantham/Todo-App',
                            branch: 'main',
                            credentialsId: 'GitHub-AuthToken'
                    }
                }
            }
        }

        stage('Build Docker') {
            steps {
                script {
                    bat '''
                    echo Building Docker Image
                    docker build -t vinayvasantham/todo-app-cicd:%BUILD_NUMBER% .
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat '''
                        echo Logging in to DockerHub
                        docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%
                        echo Pushing Docker Image
                        docker push vinayvasantham/todo-app-cicd:%BUILD_NUMBER%
                        '''
                    }
                }
            }
       }

        stage('Checkout K8S manifest SCM') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'GitHub-AuthToken', variable: 'GITHUB_TOKEN')]) {
                        git url: 'https://github.com/Vinayvasantham/Todo-App/blob/main/todoapp-manifests',
                            branch: 'main',
                            credentialsId: 'GitHub-AuthToken'
                    }
                }
            }
        }

        stage('Update K8S manifest & push to Repo') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Git-cred', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        bat '''
                        type deployment.yaml
                        powershell -Command "(Get-Content deployment.yaml).replace('32', '%BUILD_NUMBER%') | Set-Content deployment.yaml"
                        type deployment.yaml
                        git add deployment.yaml
                        git commit -m "Updated the deployment yaml | Jenkins Pipeline"
                        git remote -v
                        git push https://github.com/Vinayvasantham/Todo-App/todoapp-manifests HEAD:main
                        '''
                    }
                }
            }
        }
    }
}
