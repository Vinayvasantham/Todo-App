pipeline {
    
    agent any
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {

        stage('Checkout') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'GitHub-AuthToken', variable: 'GITHUB_TOKEN')]) {
                        git url: 'https://github.com/Vinayvasantham/Todo-App',
                            branch: 'main',
                            credentialsId: 'GitHub-AuthToken'
                    }
                }
            }
        }

        stage('Build Docker') {
            steps {
                script {
                    bat '''
                    echo Building Docker Image
                    docker build -t vinayvasantham/todo-app-cicd:%BUILD_NUMBER% .
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        bat '''
                        echo Logging in to DockerHub
                        docker login -u %DOCKER_USERNAME% -p %DOCKER_PASSWORD%
                        echo Pushing Docker Image
                        docker push vinayvasantham/todo-app-cicd:%BUILD_NUMBER%
                        '''
                    }
                }
            }
       }

        stage('Checkout K8S manifest SCM') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'GitHub-AuthToken', variable: 'GITHUB_TOKEN')]) {
                        git url: 'https://github.com/Vinayvasantham/cicd-demo-manifest-repo.git',
                            branch: 'main',
                            credentialsId: 'GitHub-AuthToken'
                    }
                }
            }
        }

        stage('Update K8S manifest & push to Repo') {
    steps {
        script {
            withCredentials([usernamePassword(credentialsId: 'Git-cred', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                bat '''
                git config --global user.name "%GIT_USERNAME%"
                git config --global user.email "nagavinay.vasantham_mel2020@svce.edu.in"
                
                REM Clone the repository if todoapp-manifests doesn't exist
                IF NOT EXIST todoapp-manifests (
                    git clone https://github.com/Vinayvasantham/Todo-App.git todoapp-manifests
                )
                
                cd todoapp-manifests
                cd todoapp-manifests
                type deployment.yaml
                $newTag = [int]$Env:IMAGE_TAG - 1
                powershell -Command "(Get-Content deployment.yaml) -replace vinayvasantham/todo-app-cicd:$newTag, vinayvasantham/todo-app-cicd:%BUILD_NUMBER% | Set-Content deployment.yaml"
                type deployment.yaml
                git add deployment.yaml
                git commit -m "Updated the deployment.yaml with build number | Jenkins Pipeline"
                git remote -v
                git push https://%GIT_USERNAME%:%GIT_PASSWORD%@github.com/Vinayvasantham/cicd-demo-manifest-repo.git HEAD:main
                '''
                    }
                }
            }
        }

    }
}
